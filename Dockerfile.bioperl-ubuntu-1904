# Dockerfile for creating container with BioPerl 
# (and a few other libs needed by Metabolic)
# (this version start with a new OS base install
 
# Dockerfile github: https://github.com/tin6150/bioperl/blob/master/Dockerfile.bioperl-ubuntu-1904


#FROM r-base:3.6.2
#FROM tin6150/base4metabolic
FROM ubuntu:19.04
MAINTAINER Tin (at) LBL.gov


# ARG is applicable to container build time only
# whereas ENV is also effected at container run time
ARG TZ="America/Denver"
ARG DEBIAN_FRONTEND=noninteractive
ARG PERL_MM_USE_DEFAULT=1
# these were only needed in centos-8
#ENV LANG=C
#ENV LC_ALL=C


RUN apt-get update ;\
    apt-get -y --force-yes --quiet install gcc perl-base git file wget gzip bash tcsh zsh less vim bc tmux screen xterm apt-utils libxml2-dev libxmlsec1-dev ;\
    dpkg --list > dpkg--list.output ;\
    echo 'Ending.  Last line of RUN block in Dockerbuild without continuation :)'


RUN touch    _TOP_DIR_OF_CONTAINER_  ;\
    echo "Starting docker build process at " | tee -a _TOP_DIR_OF_CONTAINER_  ;\
    date |            tee -a       _TOP_DIR_OF_CONTAINER_ ;\
    test -d /opt/gitrepo  || mkdir -p /opt/gitrepo        ;\
    cd      /opt/gitrepo ;\
    test -d /opt/gitrepo/bioperl  || git clone https://github.com/tin6150/bioperl.git  ;\
    cd /opt/gitrepo/bioperl &&  git pull && cd -   ;\
    cd ../.. ;\
    echo 'Ending.  Last line of RUN block in Dockerbuild without continuation :)'

# new apprach, call a helper shell script, so one set of cpan module list used by both ubuntu and centos build
RUN echo '==================================================================' ;\
    echo "installing perl/cpan packages"  | tee -a _TOP_DIR_OF_CONTAINER_     ;\
    date | TZ=PST8PDT tee -a                       _TOP_DIR_OF_CONTAINER_     ;\
    echo '==================================================================' ;\
    cd /opt/gitrepo/bioperl ;\
    bash setup-prereq.sh    2>&1 | tee LOG.setup-prereq.rst ;\
    echo $? > setup-prereq.exit.code ;\
    cd ../../.. ;\
    echo 'Ending.  Last line of RUN block in Dockerbuild without continuation :)'

# ubuntu version split this into 2 RUN block hoping to cache and avoid time out in cloud build
RUN echo '==================================================================' ;\
    echo "installing bioperl packages"    | tee -a _TOP_DIR_OF_CONTAINER_     ;\
    date | TZ=PST8PDT tee -a                       _TOP_DIR_OF_CONTAINER_     ;\
    echo '==================================================================' ;\
    cd /opt/gitrepo/bioperl ;\
    bash setup-bioperl.sh   2>&1 | tee LOG.setup-bioperl.rst ;\
    echo $? > setup-bioperl.exit.code ;\
    cd ../../.. ;\
    echo 'Ending.  Last line of RUN block in Dockerbuild without continuation :)'

RUN     cd / \
  && touch _TOP_DIR_OF_CONTAINER_  \
  && TZ=PST8PDT date  >> _TOP_DIR_OF_CONTAINER_  \
  && echo  "Dockerfile.perl 2019.1223.1550"  >> _TOP_DIR_OF_CONTAINER_   \
  && echo  "Grand Finale"

#- ENV TZ America/Los_Angeles  
ENV TZ America/Los_Angeles 
# ENV TZ likely changed/overwritten by container's /etc/csh.cshrc
#ENV DOCKERFILE Dockerfile[.cmaq]
# does overwrite parent def of ENV DOCKERFILE
ENV TEST_DOCKER_ENV     this_env_will_be_avail_when_container_is_run_or_exec
ENV TEST_DOCKER_ENV_2   Can_use_ADD_to_make_ENV_avail_in_build_process
ENV TEST_DOCKER_ENV_REF https://vsupalov.com/docker-arg-env-variable-guide/#setting-env-values
ENV DOCKER_BIOPERL "CPAN packages, including bioperl.  OS Base is Ubuntu 19.04"
# but how to append, eg add to PATH?

#ENTRYPOINT ["cat", "/Downloads/netcdf-fotran-4.4.5/_END_BUILD_NETCDF_"]
#ENTRYPOINT ["cat", "/Downloads/CMAQ/_CMAQ_BUILD_END_"]
#ENTRYPOINT ["cat", "/_TOP_DIR_OF_CONTAINER_"]
ENTRYPOINT [ "/bin/bash" ]
# if no defined ENTRYPOINT, default to bash inside the container
# parent container defined tcsh.
# can also run with exec bash to get shell:
# docker exec -it tin6150/bioperl -v $HOME:/home/tin  bash 
# careful not to cover /home/username (for this container)
